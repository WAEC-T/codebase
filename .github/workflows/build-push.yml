
name: Build and Push Docker Image WEAC Codebase

on:
  push:
    branches:
      - main
    paths:
      - 'python-flask/**'
      - 'c-sharp-razor/**'
      - 'rust-actix/**'
      - 'ruby-sinatra/**'
      - 'javascript-express/**'
      - 'go-gin/**'
      - 'go-gorilla/**'
  pull_request:
    branches:
      - main
    paths:
      - 'python-flask/**'
      - 'c-sharp-razor/**'
      - 'rust-actix/**'
      - 'ruby-sinatra/**'
      - 'javascript-express/**'
      - 'go-gin/**'
      - 'go-gorilla/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - python-flask
          - c-sharp-razor
          - rust-actix
          - ruby-sinatra
          - javascript-express
          - go-gin
          - go-gorilla

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '1'

      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            python-flask/**
            c-sharp-razor/**
            rust-actix/**
            ruby-sinatra/**
            javascript-express/**
            go-gin/**
            go-gorilla/**

      - name: Determine if Service Needs Build
        id: check_changes
        run: |
          if [[ "${{ steps.changed-files.outputs.modified_files }}" == *"${{ matrix.service }}/"* ]] || [[ "${{ steps.changed-files.outputs.added_files }}" == *"${{ matrix.service }}/"* ]]; then
            echo "Changes detected in ${{ matrix.service }}."
            echo "service_changed=true" >> $GITHUB_ENV
          else
            echo "No changes detected in ${{ matrix.service }}."
            echo "service_changed=false" >> $GITHUB_ENV
          fi

      - name: Set up Docker Buildx
        if: env.service_changed == 'true'
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        if: env.service_changed == 'true' && github.event_name == 'push'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Check if Dockerfile exists
        if: env.service_changed == 'true'
        id: check_file
        run: |
          if [ -d "./${{ matrix.service }}" ] && [ -f "./${{ matrix.service }}/Dockerfile" ]; then
            echo "found=true" >> $GITHUB_ENV
          else
            echo "found=false" >> $GITHUB_ENV
          fi

      - name: Build and Push Docker Image
        if: env.found == 'true'
        run: |
          cd ${{ matrix.service }}
          IMAGE_NAME="waect/${{ matrix.service }}"
          
          docker buildx build --platform linux/arm/v7 -t ${IMAGE_NAME}:latest .
          
          COMMIT_SHA=$(git rev-parse --short HEAD)
          TIMESTAMP=$(date +%Y%m%d%H%M)
              
          docker tag ${IMAGE_NAME}:latest simonharwick97822/${{ matrix.service }}:latest
          docker tag ${IMAGE_NAME}:latest simonharwick97822/${{ matrix.service }}:commit-sha-${COMMIT_SHA}-${TIMESTAMP}

      - name: Push Docker Image
        if: env.found == 'true' && github.event_name == 'push'
        run: |
          COMMIT_SHA=$(git rev-parse --short HEAD)
          TIMESTAMP=$(date +%Y%m%d%H%M)
          docker push simonharwick97822/${{ matrix.service }}:latest
          docker push simonharwick97822/${{ matrix.service }}:commit-sha-${COMMIT_SHA}-${TIMESTAMP}
