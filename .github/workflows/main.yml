name: CI Pipeline

on:
  pull_request:
    branches:
      - main  # Adjust this as needed
    paths:
      - 'python-flask/**'
      - 'c-sharp-razor/**'
      - 'rust-actix/**'
      - 'ruby-sinatra/**'
      - 'javascript-express/**'
      - 'go-gin/**'
      - 'go-gorilla/**'
      - '/**'  # include root-level changes

jobs:
  check-root-changes:
    runs-on: ubuntu-latest
    outputs:
      root_changed: ${{ steps.check-root.outputs.root_changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch full history to ensure access to previous commits

      - name: Check if root files changed
        id: check-root
        run: |
          # Get the list of changed files
          changed_files=$(git diff --name-only HEAD^ HEAD)

          # Check if any of the changed files are outside the known service directories
          for file in $changed_files; do
            # If the file is outside of known service directories and not in excluded directories (like .github), consider it a root-level change
            if [[ ! "$file" =~ ^(python-flask/|c-sharp-razor/|rust-actix/|ruby-sinatra/|javascript-express/|go-gin/|go-gorilla/|\.github/) ]]; then
              echo "Root-level change detected in $file"
              echo "root_changed=true" >> $GITHUB_ENV
              echo "::set-output name=root_changed::true"
              exit 0
            fi
          done

          # If no root-level changes are detected, set root_changed to false
          echo "root_changed=false" >> $GITHUB_ENV
          echo "::set-output name=root_changed::false"

  run-all-tests:
    runs-on: ubuntu-latest
    needs: check-root-changes
    if: needs.check-root-changes.outputs.root_changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y make python3-pip python3-venv

          # Manually install Docker Compose version 2.27.1
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.1/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

          # Verify Docker Compose installation
          docker-compose version

          # Set up Python virtual environment
          python3 -m venv venv
          ./venv/bin/pip install --upgrade pip
          ./venv/bin/pip install --no-cache-dir -r tests/requirements.txt

      - name: Run all tests
        run: |
          source ./venv/bin/activate
          make test-all

  run-service-tests:
    runs-on: ubuntu-latest
    needs: check-root-changes
    strategy:
      matrix:
        service:
          - python-flask
          - c-sharp-razor
          - rust-actix
          - ruby-sinatra
          - javascript-express
          - go-gin
          - go-gorilla
    if: needs.check-root-changes.outputs.root_changed == 'false'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure full commit history is available

      - name: Check if service requires testing
        id: check-changes
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q "^${{ matrix.service }}/"; then
            echo "service_changed=true" >> $GITHUB_ENV
          else
            echo "service_changed=false" >> $GITHUB_ENV

      - name: Set up environment for the service
        if: env.service_changed == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y make python3-pip python3-venv

          # Manually install Docker Compose version 2.27.1
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.1/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

          # Verify Docker Compose installation
          docker-compose version

          # Set up Python virtual environment
          python3 -m venv venv
          ./venv/bin/pip install --upgrade pip
          ./venv/bin/pip install --no-cache-dir -r tests/requirements.txt

      - name: Run service tests
        if: env.service_changed == 'true'
        run: |
          source ./venv/bin/activate
          make test-service SERVICE=${{ matrix.service }}
