name: CI Pipeline

on:
  pull_request:
    branches:
      - main  # Adjust this as needed

jobs:
  run-tests:
    runs-on: ubuntu-latest

    container:
      image: docker:dind  # Use Docker-in-Docker
      options: --privileged  # Necessary for Docker-in-Docker to work


    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up dependencies
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose python3-dev python3-pip make
          python3 -m venv venv
          ./venv/bin/pip install --upgrade pip
          ./venv/bin/pip install -r tests/requirements.txt

      # Step 3: Start the database and service
      - name: Start Services
        run: |
          docker-compose -f ./database/docker-compose.yml up -d
          docker-compose -f ./go-gorilla/docker-compose.yml up -d

      # Step 4: Wait for services to be ready
      - name: Wait for Database and Service to be Ready
        run: sleep 30

      # Step 5: Run the tests directly from the root
      - name: Run Tests
        run: ./venv/bin/pytest tests/test_api_endpoints.py

      # Step 6: Clean up containers after the test
      - name: Clean up
        run: |
          docker-compose -f ./database/docker-compose.yml down
          docker-compose -f ./go-gorilla/docker-compose.yml down
