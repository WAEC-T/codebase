name: CI Pipeline

on:
  pull_request:
    branches:
      - main  # Adjust this as needed
    paths:
      - 'python-flask/**'
      - 'c-sharp-razor/**'
      - 'rust-actix/**'
      - 'ruby-sinatra/**'
      - 'javascript-express/**'
      - 'go-gin/**'
      - 'go-gorilla/**'

jobs:
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - python-flask
          - c-sharp-razor
          - rust-actix
          - ruby-sinatra
          - javascript-express
          - go-gin
          - go-gorilla

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up dependencies
      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y make python3-pip python3-venv
          
          # Manually install Docker Compose version 2.27.1
          # THIS VERSION OR HIGHER IS NEEDED FOR THE TEST TO RUN
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.1/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          
          # Verify Docker Compose installation
          docker-compose version
          
          # Set up Python virtual environment
          python3 -m venv venv
          ./venv/bin/pip install --upgrade pip
          ./venv/bin/pip install --no-cache-dir -r tests/requirements.txt

      # Step 3: Determine which services require testing
      - name: Determine if service requires testing
        id: check_changes
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q "^${{ matrix.service }}/"; then
            echo "service_changed=true" >> $GITHUB_ENV
          fi  
      # Step 4: Run tests conditionally
      - name: Run tests
        if: env.service_changed == 'true'
        run: |
          # Activate python venv - needed here for the tests to run
          source ./venv/bin/activate
          make test-service SERVICE=${{ matrix.service }}